#!/usr/bin/env bash
setupenv() {
    cp ops/db-dev.env.example ops/db-dev.env
    cp ops/development.env.example ops/development.env
}
cmd() {
    docker-compose -f "${CFILE}" $@
}
build() {
    cmd build $@
}
up() {
    cmd up -d $@
}
down() {
    cmd down $@
}
inplace() {
    cmd build $@
    cmd up $@
}
restart() {
    cmd down $@
    cmd up $@
}
logs() {
    cmd logs $@
}
exec() {
    cmd exec $@
}

if [[ "$1" == "help" || "$1" == "-h" || "$1" == "--help" ]]; then
    echo "usage: pz [l|help|-h|--help] <subcommand>"
    echo ""
    echo "optional arguments:"
    echo "  help | -h | --help"
    echo "    print this message and exits"
    echo "  l"
    echo "    mounts the src/ directory into the container instead of copying the code into the container"
    echo ""
    echo "subcommands:"
    echo "  setupenv"
    echo "     setup development environment files, DO NOT USE FOR PROD"
    echo "  build "
    echo "     builds all containers with a build: directive"
    echo "  up"
    echo "     starts the stack creating the containers if they don't exist already, only replacing containers whose configurations have changed"
    echo "  down"
    echo "     stops the stack, removing the containers (but not deleting data stored in local mounts or named volumes"
    echo "  restart"
    echo "     restarts the containers without tearing down or creating"
    echo "  inplace"
    echo "     runs build and then up, rebuilding containers"
    echo "  logs"
    echo "     shows logs"
    echo "  exec <container> <command> <optional_args>"
    echo "     executes arbitrary command in specified container."
    echo "  cmd <command>"
    echo "     executes arbitrary docker-compose command. use "help" help to list them"
    echo ""
    echo ""
    echo "all subcommands except setupenv and cmd can be appended by flags and specifying the container/s. examples: "
    echo ""
    echo "  pz logs -f web"
    echo "    runs command only on web service"
    echo ""
    echo "  pz restart proxy backend"
    echo "    restarts only backend and proxy services"
    exit 0
fi

CFILE="ops/docker-compose.dev.yml"

if [[ "$1" == "l" ]]; then
    CFILE="ops/docker-compose.dev.local.yml"
    shift
fi

command=${1}
shift

${command} $@